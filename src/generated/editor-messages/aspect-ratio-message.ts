// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { AspectRatio } from '../editor-messages/aspect-ratio.js';


export class AspectRatioMessage {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):AspectRatioMessage {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsAspectRatioMessage(bb:flatbuffers.ByteBuffer, obj?:AspectRatioMessage):AspectRatioMessage {
  return (obj || new AspectRatioMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsAspectRatioMessage(bb:flatbuffers.ByteBuffer, obj?:AspectRatioMessage):AspectRatioMessage {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new AspectRatioMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

aspectRatio(obj?:AspectRatio):AspectRatio|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new AspectRatio()).__init(this.bb_pos + offset, this.bb!) : null;
}

static startAspectRatioMessage(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addAspectRatio(builder:flatbuffers.Builder, aspectRatioOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, aspectRatioOffset, 0);
}

static endAspectRatioMessage(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  builder.requiredField(offset, 4) // aspect_ratio
  return offset;
}

static createAspectRatioMessage(builder:flatbuffers.Builder, aspectRatioOffset:flatbuffers.Offset):flatbuffers.Offset {
  AspectRatioMessage.startAspectRatioMessage(builder);
  AspectRatioMessage.addAspectRatio(builder, aspectRatioOffset);
  return AspectRatioMessage.endAspectRatioMessage(builder);
}
}
