// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { AspectRatioMessage } from '../editor-messages/aspect-ratio-message.js';
import { PingMessage } from '../editor-messages/ping-message.js';
import { SpawnMessage } from '../editor-messages/spawn-message.js';


export enum MessageType {
  NONE = 0,
  PingMessage = 1,
  SpawnMessage = 2,
  AspectRatioMessage = 3
}

export function unionToMessageType(
  type: MessageType,
  accessor: (obj:AspectRatioMessage|PingMessage|SpawnMessage) => AspectRatioMessage|PingMessage|SpawnMessage|null
): AspectRatioMessage|PingMessage|SpawnMessage|null {
  switch(MessageType[type]) {
    case 'NONE': return null; 
    case 'PingMessage': return accessor(new PingMessage())! as PingMessage;
    case 'SpawnMessage': return accessor(new SpawnMessage())! as SpawnMessage;
    case 'AspectRatioMessage': return accessor(new AspectRatioMessage())! as AspectRatioMessage;
    default: return null;
  }
}

export function unionListToMessageType(
  type: MessageType, 
  accessor: (index: number, obj:AspectRatioMessage|PingMessage|SpawnMessage) => AspectRatioMessage|PingMessage|SpawnMessage|null, 
  index: number
): AspectRatioMessage|PingMessage|SpawnMessage|null {
  switch(MessageType[type]) {
    case 'NONE': return null; 
    case 'PingMessage': return accessor(index, new PingMessage())! as PingMessage;
    case 'SpawnMessage': return accessor(index, new SpawnMessage())! as SpawnMessage;
    case 'AspectRatioMessage': return accessor(index, new AspectRatioMessage())! as AspectRatioMessage;
    default: return null;
  }
}
